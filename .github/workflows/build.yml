on: [push, pull_request]

name: build

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    
    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest, r: 'devel'}
        - {os: macOS-latest, r: 'release'}
        - {os: windows-latest, r: 'release'}
        - {os: ubuntu-16.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        - {os: ubuntu-16.04, r: 'oldrel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      RSPM: ${{ matrix.config.rspm }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_CRAN_INCOMING_REMOTE_: false

    steps:
    - uses: actions/checkout@v2
    - uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.config.r }}
    - uses: r-lib/actions/setup-pandoc@master

    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies=TRUE), ".github/depends.Rds", version=2)
      shell: Rscript {0}

    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

    - name: Install system dependencies
      if: runner.os == 'Linux'
      env:
        RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      run: |
        Rscript -e "remotes::install_github('r-hub/sysreqs')"
        sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
        sudo -s eval "$sysreqs"

    - name: Install dependencies
      run: |
        remotes::install_deps(dependencies=TRUE)
        remotes::install_cran(c("rcmdcheck", "covr"))
      shell: Rscript {0}

    - name: Check
      run: rcmdcheck::rcmdcheck(args=c("--no-manual", "--as-cran"), error_on="warning", check_dir="check")
      shell: Rscript {0}

    - name: Upload check results
      if: ${{ failure() }}
      uses: actions/upload-artifact@master
      with:
        name: ${{ runner.os }}-r${{ matrix.config.r }}-results
        path: check

    - name: Test coverage
      if: ${{ success() && runner.os == 'Linux' && matrix.config.r == 'release' }}
      run: covr::codecov()
      shell: Rscript {0}
