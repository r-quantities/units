on: [push, pull_request]

name: build

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ${{ matrix.config.os }}
    name: check on ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest, r: 'release'}
        - {os: windows-latest, r: 'release'}
        - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
        - {os: ubuntu-latest, r: 'release', covr: 'yes'}
        - {os: ubuntu-latest, r: 'oldrel'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
    - name: Configure git
      if: ${{ runner.os == 'Windows' }}
      run: git config --global core.autocrlf false

    - uses: actions/checkout@v2
    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}
        use-public-rspm: true
    - uses: r-lib/actions/setup-pandoc@v1

    - name: Install macOS dependencies
      if: ${{ runner.os == 'macOS' }}
      run: brew install automake udunits

    - uses: r-lib/actions/setup-r-dependencies@v1
      with:
        extra-packages: rcmdcheck, covr

    - name: Check
      run: |
        rcmdcheck::rcmdcheck(args=c("--no-manual", "--as-cran"),
          error_on="warning", check_dir="check")
      shell: Rscript {0}

    - name: Upload check results
      if: ${{ failure() }}
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
        path: check

    - name: Test coverage
      if: ${{ success() && matrix.config.covr == 'yes' }}
      run: covr::codecov()
      shell: Rscript {0}

  quantities:
    needs: build
    runs-on: ${{ matrix.config.os }}
    name: quantities on ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
        - {os: ubuntu-latest, r: 'release'}
        - {os: ubuntu-latest, r: 'oldrel'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_CRAN_INCOMING_REMOTE_: false

    steps:
    - uses: actions/checkout@v2
      with:
        repository: r-quantities/quantities
    - name: Add units and errors as Remotes
      run: |
        echo "Remotes: r-quantities/errors," >> DESCRIPTION
        echo "  $GITHUB_REPOSITORY@$GITHUB_SHA" >> DESCRIPTION
    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}
        use-public-rspm: true
    - uses: r-lib/actions/setup-pandoc@v1

    - uses: r-lib/actions/setup-r-dependencies@v1
      with:
        extra-packages: rcmdcheck

    - name: Check
      run: |
        rcmdcheck::rcmdcheck(args=c("--no-manual", "--as-cran"),
          error_on="warning", check_dir="check")
      shell: Rscript {0}

    - name: Upload check results
      if: ${{ failure() }}
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
        path: check
